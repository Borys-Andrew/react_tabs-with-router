{"version":3,"sources":["components/NavBarLink/NavBarLink.tsx","components/NavBar/NavBar.tsx","pages/HomePage/HomePage.tsx","components/TabLink/TabLink.tsx","pages/TabsPage/TabsPage.tsx","pages/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["NavBarLink","to","name","className","isActive","classnames","NavBar","HomePage","TabLink","tab","id","title","tabs","content","TabsPage","tabId","useParams","selectedTab","find","map","isSelectedTab","PageNotFound","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPAQaA,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACzC,cAAC,IAAD,CACEC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OACTC,IAAW,cAAe,CACxB,YAAaD,KAGjBH,GAAIA,EANN,SAQGC,KCfQI,EAAS,WACpB,OACE,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAYF,GAAG,IAAIC,KAAK,SACxB,cAAC,EAAD,CAAYD,GAAG,QAAQC,KAAK,iBCXzBK,EAAW,kBACtB,oBAAIJ,UAAU,QAAd,wBCMWK,G,KAA2B,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACjCC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEZ,OACE,cAAC,IAAD,CACEV,GAAE,aAAQS,GADZ,SAGGC,MCTDC,EAAO,CACX,CAAEF,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,gBAG7BC,EAAqB,WAChC,IAAQC,EAAUC,cAAVD,MACFE,EAAcL,EAAKM,MAAK,qBAAGR,KAAgBK,KAEjD,OACE,sBAAKZ,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,wBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGS,EAAKO,KAAI,SAAAV,GACR,IAAQC,EAAOD,EAAPC,GACFU,EAAgBV,KAAE,OAAKO,QAAL,IAAKA,OAAL,EAAKA,EAAaP,IAE1C,OACE,oBAEE,UAAQ,MACRP,UAAWE,IAAW,CACpB,YAAae,IAJjB,SAOE,cAAC,EAAD,CAASX,IAAKA,KANTC,UAaf,qBAAKP,UAAU,QAAQ,UAAQ,aAA/B,SACGc,EACGA,EAAYJ,QACZ,4BC1CCQ,EAAe,kBAC1B,oBAAIlB,UAAU,QAAd,6BCQWmB,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKnB,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUvB,GAAG,IAAIwB,SAAO,MAErD,eAAC,IAAD,CAAOF,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAGhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eCnBjCG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.df79471b.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\n\ntype Props = {\n  to: string;\n  name: string;\n};\n\nexport const NavBarLink: React.FC<Props> = ({ to, name }) => (\n  <NavLink\n    className={({ isActive }) => (\n      classnames('navbar-item', {\n        'is-active': isActive,\n      })\n    )}\n    to={to}\n  >\n    {name}\n  </NavLink>\n);\n","import { NavBarLink } from '../NavBarLink';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavBarLink to=\"/\" name=\"Home\" />\n          <NavBarLink to=\"/tabs\" name=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import { Link } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab;\n};\n\nexport const TabLink: React.FC<Props> = ({ tab }) => {\n  const { id, title } = tab;\n\n  return (\n    <Link\n      to={`../${id}`}\n    >\n      {title}\n    </Link>\n  );\n};\n","import classnames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TabLink } from '../../components/TabLink';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = () => {\n  const { tabId } = useParams();\n  const selectedTab = tabs.find(({ id }) => id === tabId);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Title page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id } = tab;\n            const isSelectedTab = id === selectedTab?.id;\n\n            return (\n              <li\n                key={id}\n                data-cy=\"Tab\"\n                className={classnames({\n                  'is-active': isSelectedTab,\n                })}\n              >\n                <TabLink tab={tab} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab\n          ? selectedTab.content\n          : 'Please select a tab'}\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './pages/HomePage';\nimport { TabsPage } from './pages/TabsPage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nexport const App = () => (\n  <>\n    <NavBar />\n\n    <div className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"/tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId\" element={<TabsPage />} />\n        </Route>\n\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Routes>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}